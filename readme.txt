********************************************************
********************************************************
********************************************************
Таски идут по очереди выполнения.
Во всех компонентах обязательно прописывать правильные и четкие PropTypes
Реакт компонента (РК далее)

1000, 768, 320 - брейкпоинты для медиа квериз

Вся верстка делается пока для таблета и десктопа. Мобайл пока должен работать как таблет (в плане макс. ужимаемость до 320, даже, если это не красиво.) Красиво мобайл сделаем потом.

______ ДЕДЛАЙН - 20 февраля 2017 ______

- =:= 0 ч =:= Вова
 	сделать джейсон файл следующего вида: { 
 		correct: {login: 'bob', password: 'bob'},
 		wrong: {login: 'bobby', password: 'bob'},
 		error: {login: 'bu', password: 'bob', error: 'shit happens'},
	}

- =:= 1 ч =:= Вова
	добавить валидацию полей пароль и логин в rules в файле global/validation
	импортировать метод валидации и константы названий полей валидации в компонент логин.

- =:= 2 ч =:= Вова
	into login/index.js добавить в компонент метод типа:
	updateField (field, val) => { 
		let err = validate(field, val);
		this.setState({field: {value: val, error: err };
	})
	

	В конструктор добавить строку типа:
	this.updateField = this.updateField.bind(this);

	на onChange инпутов повесить вызов этого метода соответственно с пом. анонимной функции типа:
	onChange={(e) => this.updateField('login', e.value)}

	В jsx компонента добавить куски для отрисовки ошибки и подсветки красным бордером ошибочного поля.
	Ошибка - красный красивый цвет (возьми из палитры Material UI), 12px, средней жирности под полем. Бордер такого же цвета. Т.е., в рендере будет примерно: 
		let logErrCls = this.state.login.error ? 'MyInputErrorClass' : ''; ...
	и для парроля аналогично. потом этот класс на инпут вешаешь и все.

	Импортируешь тостер в компонент логина.

	делаешь метод сабмит (по аналогии с пред. методами). Вызываешь его по клику на кнопку логина.
	в нем - вычитываешь джейсон (или уже парсишь его, если ты его уже импортировал в компонент). 
	А дальше, проверяешь, если этот правильный логин/пароль, то делаешь что-то типа 
	this.props.router.push('/main') - т.е., навигацию на мейн. Если неправильный, то обновляешь стейт компонента соответственно. Неправильный - это иммитация отправки на сервер, но что-то не подошло или валидация на сервере не прошла - в этом случае, все стандартно. Просто отрисовка ошибки под конкретным полем ошибки.
	Если ошибка глобального характера (иммитация отказа сети и т.д., несхендленного на сервере), то тостером плюнуть ошибку.

- =:= 1-2 ч =:= Вова
 	набросать хтмл Хедера, чтобы было адаптивно под все разрешения. Под мобайл пускай тоже ужимается до предела пока что. Лучшие варианты, типа "большой лого и иконки снизу" - отложим на потом. 

- =:= 1 ч =:= Вова
 	Сделать каждую иконку РК, который является стилизированным "Линк" РК, который пропертями принимает путь к файлу иконки и путь для роутера, куда по клику нужно переходить.

- =:= 1 ч =:= Вова
 	Сделать Хедер, как РК, которые пропертями получает массив Реакт Эллементов (иконки). Передавать иконки нужно с ИндексЛейаута, а значит там их и импортировать. Т.е., Хедер должен правильно во флексе располагать иконки, даже, если их 100. Такова суть этого компонента. 

- =:= 1 ч =:= Дима
	доделать ИндексЛейаут, чтобы он правильно отображал хедер и чайлды, которые в него передаются с рутера. 

- =:= 1 ч =:= Дима
	доделать ТаскЛейаут, чтобы он правильно отображал массив тасок и текущую таску, которые в него передаются с рутера. Каждый подраздел сделать в виде абстрактных плейсхолдеров: "сайд" и "контент". 

- =:= 3 ч =:= Вова
	набросать верстку страница создания/реадактирования задачи. Строку "Термин голосування ..." убрать. Не нужна.

- =:= 2-3 ч =:= Дима
	создать Приоритет РК. Должен работать след. образом: поддерживать 2 режима (эдитебл, ридонли); содержать 5 одинаковых кружечков, которые  в эдитебл режиме при клике и последующем ховере подсвечиваться оранжевым цветом. При повторном клике К запоминает последнее состояние. Кружечки могут быть расположены вертикально либо горизонтально. Пропертями принимает: положение кружечков, стартовое значение приоритета, режим редактируемости, коллбек для запоминания выбранного значения. По дефолту приоритет всегда 1. Пустыми все кружечки быть не должны.

- =:= 2-3 ч =:= Вова
	создать ТулТип РК. Встречается на странице создания/реадактирования задачи (маленький синий знак вопроса).
	Пропертями принимает текст самого тултипа.

- =:= 1-2 ч =:= Вова
	создать Додать вопрос РК. Встречается на странице создания/реадактирования задачи. Содержит строки "Пытання до голосування", "Варианты ответов" и кнопку добавления.
	Пропертями принимает текст вопроса, массив строк (варианты ответа) и коллбеки, которые редактируют указанные поля. Должен по дефолту генерить изначально варианты типа да/нет.

- =:= 1-2 ч =:= Вова
	создать прикрепить файл РК. Это одна кнопка. Но Компонент должен принимать пропертями название класса стилей (может быть по-разному стилизована) и коллбек для апдейта массива путей к файлам.

- =:= 1 ч =:= Вова
	Добавить правила валидации полей на форме создания/эдита таски. Должно быть, как минимум одно ключевое слово. Метод будет принимать массив со строками. Описание должно быть. Также, название и вопрос на голосование должны быть введены. Варианты ответов необязательны, так как должны быть дефолтные варианты типа да/нет вариантов.

- =:= 4-5 ч =:= Дима
	создать добавление ключевого слова РК. Это лейбл и поле для ввода. В пропертях получает массив строк (ключевых слов), а также коллбеки для удаления из массива и добавления в массив новых строк. Должен работать: при набирании текста появляется дроп-даун с набором ключевых слов, которые подходят. При клике по слову из дропдауна - оно должно тегом (как на стековерфлоу добавляться перед полем (т.е., какой-то текст на сереньком фоне с крестиком для удаления). При добавлении тега, вызывается соотв. коллбек, при удалении также. Когда вводится текст, в дроп-дауне должен крутится спиннер, пока не подгрузятся ключевые слова. 
	Ключевые слова - пока делаем хардкодом в джейсон файле. Метод выборки ключевых слов добавляем уже через редукс. Должны восприниматься только выбранные ключевые слова а не то, что выбрано в инпуте.

- =:= 4-5 ч =:= Дима
	проработка глобального стора, всех редьюсеров и структуры стейта.


- =:= 2-3 ч =:= Вова
	создать создание/редактирование задачи РК. Пропертями получает объект-таска, поля которой и отображает. Создать метод заглушку, который сохраняет все в джейсон. В зависимости от того, есть ли у таски айдишник, понимается, это новая или старая на эдит таска, заголовок и текст кнопки разные соответственно и методы при сабмите тоже разные. Все должно быть сделано через глобальный стор.

- =:= 6-8 ч =:= наброска верстки страницы задач (taskVote)